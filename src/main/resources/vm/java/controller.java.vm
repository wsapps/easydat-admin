package ${packageName}.controller;

import java.util.List;

import org.noear.solon.annotation.Body;
import org.noear.solon.annotation.Controller;
import org.noear.solon.annotation.Delete;
import org.noear.solon.annotation.Get;
import org.noear.solon.annotation.Inject;
import org.noear.solon.annotation.Mapping;
import org.noear.solon.annotation.Path;
import org.noear.solon.annotation.Post;
import org.noear.solon.annotation.Put;
import org.noear.solon.auth.annotation.AuthPermissions;

import cn.easydat.common.annotation.Log;
import cn.easydat.common.core.controller.BaseController;
import org.noear.solon.core.handle.Result;
import cn.easydat.common.enums.BusinessType;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.${ClassName}Service;
#if($table.crud || $table.sub)
import cn.easydat.common.core.page.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Controller
@Mapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController
{
    @Inject
    private ${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @AuthPermissions("${permissionPrefix}:list")
    @Get
    @Mapping("/list")
#if($table.crud || $table.sub)
    public TableDataInfo<${ClassName}> list(${ClassName} ${className})
    {
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }
#elseif($table.tree)
    public Result<${ClassName}> list(${ClassName} ${className})
    {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return succeed(list);
    }
#end

    /**
     * 导出${functionName}列表
     */
    @AuthPermissions("${permissionPrefix}:export")
    @Log(title = "${functionName}", businessType = BusinessType.EXPORT)
    @Post
    @Mapping("/export")
    public void export(${ClassName} ${className})
    {
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        export(list);
    }

    /**
     * 获取${functionName}详细信息
     */
    @AuthPermissions("${permissionPrefix}:query")
    @Get
    @Mapping(value = "/{${pkColumn.javaField}}")
    public Result<${ClassName}> getInfo(@Path("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        return succeed(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @AuthPermissions("${permissionPrefix}:add")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @Post
    @Mapping
    public Result<Object> add(@Body ${ClassName} ${className})
    {
        return toAjax(${className}Service.insert${ClassName}(${className}));
    }

    /**
     * 修改${functionName}
     */
    @AuthPermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @Put
    @Mapping
    public Result<Object> edit(@Body ${ClassName} ${className})
    {
        return toAjax(${className}Service.update${ClassName}(${className}));
    }

    /**
     * 删除${functionName}
     */
    @AuthPermissions("${permissionPrefix}:remove")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
	@Delete
	@Mapping("/{${pkColumn.javaField}s}")
    public Result<Object> remove(@Path ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        return toAjax(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }
}
